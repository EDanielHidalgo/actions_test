name: Test Workflow

on:
  push:
    branches:
      - main
      - testing

jobs:
  reset-health-checker:
    runs-on: self-hosted
    steps:
      - name: Reset health checker container
        run: |
          docker stop health_checker || true
          docker rm health_checker || true

  reset-webserver:
    runs-on: self-hosted
    steps:
      - name: Reset webserver container
        run: |
          docker stop webserver || true
          docker rm webserver || true

  reset-network:
    runs-on: self-hosted
    steps:
      - name: Reset network
        run: |
          docker network rm python-ngnix-network || true
          docker network create python-ngnix-network

  get-source:
    runs-on: self-hosted
    needs: [reset-health-checker, reset-webserver, reset-network]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  build-server-health-checker:
    runs-on: self-hosted
    needs: get-source
    steps:
      - name: Build health checker image
        working-directory: ./app
        run: docker build -t server_health_checker .

  build-webserver-image:
    runs-on: self-hosted
    needs: get-source
    steps:
      - name: Build webserver image
        working-directory: ./web_server
        run: docker build -t web_server .

  run-webserver:
    runs-on: self-hosted
    needs: build-webserver-image
    steps:
      - name: Run webserver
        run: docker run -d --name webserver --network python-ngnix-network web_server

  run-health-check:
    runs-on: self-hosted
    needs: [build-server-health-checker, run-webserver]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Run health check
        run: docker run --name health_checker --network python-ngnix-network server_health_checker

      - name: Check results
        run: docker inspect health_checker | grep "ExitCode"

  run-health-check-on-fail:
    runs-on: self-hosted
    needs: [build-server-health-checker, run-webserver]
    if: github.ref == 'refs/heads/testing'
    steps:
      - name: Run health check
        run: docker run --name health_checker --network python-ngnix-network server_health_checker

      - name: Check results
        if: ${{ failure() }}
        run: |
          EXIT_CODE=$(docker inspect health_checker | grep "ExitCode")
          echo "Exit Code: $EXIT_CODE"
        # id: on-fail-result

  tear-down-health-checker:
    runs-on: self-hosted
    needs: run-health-check
    if: ${{ always() }}
    steps:
      - name: Tear down health checker
        run: |
          docker stop health_checker || true
          docker rm health_checker || true

  tear-down-webserver:
    runs-on: self-hosted
    needs: [run-health-check, run-health-check-on-fail]
    if: ${{ always() }}
    steps:
      - name: Tear down webserver
        run: |
          docker stop webserver || true
          docker rm webserver || true
