name: Test Workflow

on:
  push:
    branches:
      - main

jobs:
  get-source:
    runs-on: self-hosted 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  destroy-containers:
    runs-on: self-hosted 

    steps:
      - name: Destroy health check container
        run: docker stop health_checker && docker rm health_checker

      - name: Destroy webserver container
        run: docker stop webserver && docker rm webserver

  build-network:
    runs-on: self-hosted

    steps:
      - name: Make script executable
        id: network_check
        run: chmod +x docker_network_exists.sh

      - name: Check if network exists
        run: ./docker_network_exists.sh

      - name: Reset Docker network
        if: steps.network_check.outputs.exists == 'true'
        run: echo "It exists" && docker network create python-ngnix-network

      - name: Create Docker network
        if: steps.network_check.outputs.exists == 'false'
        run: echo "No such server" && docker network create python-ngnix-network



  build-python-image:
    runs-on: self-hosted
    needs: [get-source, build-network]
    steps:
      - name: Build Python Docker image
        working-directory: ./app
        run: docker build -t server_health_checker .

  build-webserver-image:
    runs-on: self-hosted
    needs: [get-source, build-network]
    steps:
      - name: Build nginx Docker image
        working-directory: ./web_server
        run: docker build -t web_server .

  # check-for-network:
  #   runs-on: self-hosted
  #   needs: [build-python-image, build-webserver-image]
  #
  #   steps:
  #     - name: Make script executable
  #       id: network_check
  #       run: chmod +x docker_network_exists.sh
  #
  #     - name: Check if network exists
  #       run: ./docker_network_exists.sh
  #
  # build-network:
  #   runs-on: self-hosted
  #   needs: [check-for-network]
  #
  #   steps:
  #     - name: Build Docker network
  #       run: docker network create python-ngnix-network

  run-webserver:
    runs-on: self-hosted
    needs: build-webserver-image

    steps:
      - name: Run webserver
        run: docker run --name webserver --network python-ngnix-network web_server

  run-health-check:
    runs-on: self-hosted
    needs: [build-python-image, run-webserver]

    steps:
      - name: Run health check
        run: docker run --name health_checker --network python-ngnix-network server_health_checker

      - name: Check results
        run: docker inspect checker | grep "ExitCode"

  tear-down-server:
    runs-on: self-hosted
    needs: run-health-check

    steps:
      - name: Tear down server
        run: docker stop web_server && docker rm web_server

  tear-down-health-checker:
    runs-on: self-hosted
    needs: run-health-check

    steps:
      - name: Tear down health checker
        run: docker stop health_checker && docker rm health_checker

      # - name: Run container
      #   id: run_test
      #   run: docker run gh_action_test
      #
      # - name: Check results
      #   if: steps.run_test.outcome != 'success'
      #   run: exit 1
# docker run --name checker --network test-network web_server_checker
